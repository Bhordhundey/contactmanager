{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/test/Test.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","Axios","put","About","Test","title","fetch","then","response","json","NotFound","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.68f8305c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_CONTACT':\r\n        return {\r\n            ...state,\r\n            contacts: state.contacts.filter(contact => \r\n                contact.id !== action.payload)\r\n        };\r\n        case 'ADD_CONTACT':\r\n        return {\r\n            ...state,\r\n            contacts: [action.payload, ...state.contacts]\r\n        };\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\r\n            }\r\n\r\n        default:\r\n        return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => \r\n            this.setState(state => reducer(state, action))\r\n    };\r\n\r\n    // componentDidMount() {\r\n    //     axios.get('https://jsonplaceholder.typicode.com/users')\r\n    //     .then(res => this.setState({contacts: res.data}))\r\n    // }\r\n\r\nasync componentDidMount() {\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users')\r\n        this.setState({contacts: res.data})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}> \r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  // onDeleteClick = (id, dispatch) => {\r\n  //   axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n  //     .then(res => dispatch({type: 'DELETE_CONTACT', payload: id}))\r\n  // }\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n      dispatch({type: 'DELETE_CONTACT', payload: id}); \r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return(\r\n            <div className=\"card card-body mb-3\">\r\n            <h4>Name: {name} <i onClick={() => this.setState({showContactInfo: !this.state.showContactInfo})} className=\"fas fa-sort-down\" style={{cursor: 'pointer'}}></i>\r\n            <i className=\"fas fa-times\" style= {{cursor: 'pointer', float: 'right', color: 'red'}} onClick={this.onDeleteClick.bind(this, id, dispatch)}></i>\r\n            <Link to={`contact/edit/${id}`}>\r\n              <i className=\"fas fa-pencil-alt\" \r\n              style={{\r\n                cursor: 'pointer',\r\n                float: 'right',\r\n                color: 'black',\r\n                marginRight: '1rem'\r\n              }}></i>\r\n            </Link>\r\n            </h4>\r\n    \r\n            {showContactInfo ? (<ul className=\"list-group\">\r\n                <li className=\"list-group-item\">Email: {email}</li>\r\n                <li className=\"list-group-item\">Phone: {phone}</li>\r\n            </ul>) : null}\r\n          </div>\r\n          )\r\n        }}\r\n\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n   contact: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context'\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return(\r\n        <Consumer>\r\n            {value => {\r\n                const { contacts } = value\r\n                return(\r\n                <React.Fragment>\r\n                    <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact </span>List</h1>\r\n                    {contacts.map(contact => (\r\n                        <Contact \r\n                            key = {contact.id}\r\n                            contact = {contact}\r\n                        />\r\n                    ))}\r\n                </React.Fragment>\r\n                )\r\n            }}\r\n\r\n        </Consumer>\r\n    )\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst Header = props => {\r\n    const {branding} = props\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n        <div className=\"container\">\r\n            <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n            <div>\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\"></i>Home</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\"></i>Add</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\"></i>About</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: 'My App'\r\n}\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n}\r\n\r\nexport default  Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n    <label htmlFor={name}>{label}</label>\r\n    <input \r\n        type={type}\r\n        name={name} \r\n        className={classnames('form-control form-control-lg', {\r\n            'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange} \r\n        />\r\n        {error && <div className=\"invalid-feedback\">\r\n        {error}\r\n        </div>}\r\n    \r\n</div>\r\n  )\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\n\r\nexport default TextInputGroup","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check for Error]\r\n    if(name === '') {\r\n      this.setState({errors: {name: 'Name is required'}});\r\n      return;\r\n    }\r\n    if(email === '') {\r\n      this.setState({errors: {email: 'Email is required'}});\r\n      return;\r\n    }\r\n    if(phone === '') {\r\n      this.setState({errors: {phone: 'Phone is required'}});\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n    \r\n    dispatch({type: 'ADD_CONTACT', payload: res.data}) \r\n    \r\n    \r\n\r\n    // Clear State\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    // redirect to Home\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;  \r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n            <div className=\"card-header\">Add Contact</div>\r\n            <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                    <TextInputGroup \r\n                      label=\"Name\"\r\n                      name=\"name\"\r\n                      placeholder= \"Enter Name...\"\r\n                      value={name}\r\n                      onChange={this.onChange}\r\n                      error={errors.name}\r\n                    />\r\n                       <TextInputGroup \r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      type=\"email\"\r\n                      placeholder= \"Enter Email...\"\r\n                      value={email}\r\n                      onChange={this.onChange}\r\n                      error={errors.email}\r\n                    />\r\n                       <TextInputGroup \r\n                      label=\"Phone\"\r\n                      name=\"phone\"\r\n                      placeholder= \"Enter Phone...\"\r\n                      value={phone}\r\n                      onChange={this.onChange}\r\n                      error={errors.phone}\r\n                    />\r\n                    <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\"/>\r\n                </form>\r\n            </div>\r\n          </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default AddContact;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport Axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n  async componentDidMount() {\r\n      const { id } = this.props.match.params;\r\n      const res = await Axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n      const contact = res.data;\r\n\r\n      this.setState({\r\n          name: contact.name,\r\n          email: contact.email,\r\n          phone: contact.phone\r\n      })\r\n  }\r\n\r\n  onSubmit = async(dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check for Error]\r\n    if(name === '') {\r\n      this.setState({errors: {name: 'Name is required'}});\r\n      return;\r\n    }\r\n    if(email === '') {\r\n      this.setState({errors: {email: 'Email is required'}});\r\n      return;\r\n    }\r\n    if(phone === '') {\r\n      this.setState({errors: {phone: 'Phone is required'}});\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n        name,\r\n        email,\r\n        phone\r\n    }\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await Axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n\r\n    dispatch({type: 'UPDATE_CONTACT', payload: res.data})\r\n\r\n    // Clear State\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    // redirect to Home\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;  \r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n            <div className=\"card-header\">Edit Contact</div>\r\n            <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                    <TextInputGroup \r\n                      label=\"Name\"\r\n                      name=\"name\"\r\n                      placeholder= \"Enter Name...\"\r\n                      value={name}\r\n                      onChange={this.onChange}\r\n                      error={errors.name}\r\n                    />\r\n                       <TextInputGroup \r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      type=\"email\"\r\n                      placeholder= \"Enter Email...\"\r\n                      value={email}\r\n                      onChange={this.onChange}\r\n                      error={errors.email}\r\n                    />\r\n                       <TextInputGroup \r\n                      label=\"Phone\"\r\n                      name=\"phone\"\r\n                      placeholder= \"Enter Phone...\"\r\n                      value={phone}\r\n                      onChange={this.onChange}\r\n                      error={errors.phone}\r\n                    />\r\n                    <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\"/>\r\n                </form>\r\n            </div>\r\n          </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default EditContact;","import React from 'react'\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n    state = {\r\n        id: '',\r\n        title: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n        .then(response => response.json())\r\n        .then(data => this.setState({\r\n            id: data.id,\r\n            title: data.title\r\n        }))\r\n    };\r\n\r\n    // componentWillMount() {\r\n    //     console.log(\"componentWillMount\")\r\n    // };\r\n\r\n    // componentDidUpdate() {\r\n    //     console.log(\"componentDidUpdate\")\r\n    // };\r\n\r\n    // componentWillUpdate() {\r\n    //     console.log(\"componentWillUpdate\")\r\n    // };\r\n\r\n    // componentWillReceiveProps(nextProps, nextState) {\r\n    //     console.log(\"componentWillReceiveProps\")\r\n    // };\r\n\r\n    // static getDerivedStateFromProps(nextProps, prevState) {\r\n    //     return {\r\n    //         test: 'something'\r\n    //     }\r\n    // };\r\n\r\n    // getSnapshotBeforeUpdate(prevProps, prevState) {\r\n    //     console.log(\"getSnapshotBeforeUpdate\")\r\n    // }\r\n\r\n\r\n  render() {\r\n      const { title, id} = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{id}</h1>\r\n        <p>{title}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\"><span className=\"text-danger\">404 </span>Page Not Found</h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport About from './components/pages/About';\nimport Test from './components/test/Test';\n\nimport { Provider } from './context'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport NotFound from './components/pages/NotFound';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n           <div className=\"App\">\n             <Header branding=\"Contact Manager\" />\n           <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/test\" component={Test} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n          </div>\n          </Router>\n      </Provider>\n   \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}